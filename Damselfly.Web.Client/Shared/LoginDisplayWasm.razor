@using Damselfly.Core.DbModels
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject IUserService userService
@inject IAuthService AuthService
@inject IConfigService configService

@if (userService.RolesEnabled)
{
    <AuthorizeView>
        <Authorized>
            <div class="damselfly-statusbarpanel" title="Logged in as @context.User.Identity?.Name">
                <i class="processing-icon fas fa-user" />
                <NavLink href="/config">@context.User.Identity?.Name</NavLink>
            </div>
            <div>
                <button class="btn btn-primary" @onclick="LogOut" type="button">Log Out</button>
            </div>
        </Authorized>
        <NotAuthorized>
            <div>
                <button class="btn btn-primary" @onclick="Login" type="button">Log In</button>
            </div>
        </NotAuthorized>
    </AuthorizeView>
}

@code{
    async Task LogOut()
    {
        await AuthService.Logout();

        var forceLogin = configService.GetBool(ConfigSettings.ForceLogin);

        if (forceLogin)
            Navigation.NavigateTo("Login");
        else
            Navigation.NavigateTo("/");
    }

    void Login()
    {
        Navigation.NavigateTo("Login");
    }
}