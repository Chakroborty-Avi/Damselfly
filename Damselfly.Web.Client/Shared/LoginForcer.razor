
@using Damselfly.Core.Utils.Constants

@inject NavigationManager navigationManager
@inject ConfigService configService
@inject UserService userService

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        var forceLogin = configService.GetBool(ConfigSettings.ForceLogin);

        // Check if any users have been created. If there aren't any, then we need to allow
        // the user to create the first one, so disable the login redirect.
        var users = await userService.GetUsers();

        if( users.Any() && forceLogin )
        {
            var user = (await AuthStat).User;

            if (!user.Identity.IsAuthenticated)
            {
                var localRedirect = "/" + navigationManager.ToBaseRelativePath(navigationManager.Uri);
                navigationManager.NavigateTo($"/Identity/Account/Login?returnUrl={Uri.EscapeDataString(localRedirect)}");
            }
        }
    }
}
