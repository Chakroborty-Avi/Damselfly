@using Damselfly.Core.ScopedServices
@inherits LayoutComponentBase
@implements IDisposable
@inject ViewDataService ViewDataService

    <MudDialogProvider FullWidth="true" MaxWidth="MaxWidth.Small" />
    <RadzenContextMenu />

    <DetailedErrorBoundary>
        <ChildContent>
            <CascadingAuthenticationState>
                <DetailedErrorBoundary>
                    <LoginForcer />
                    <ThemeSwitcher />
                </DetailedErrorBoundary>
                @if (ViewDataService.ShowSideBar)
                {
                    <div class="damselfly-container">
                        <div class="damselfly-application">
                            <SplitView>
                                <LeftPane>
                                    <SideBar />
                                </LeftPane>
                                <RightPane>
                                    @Body
                                </RightPane>
                            </SplitView>
                        </div>
                        <DetailedErrorBoundary>
                            <Statusbar />
                        </DetailedErrorBoundary>
                    </div>
                }
                else
                {
                    <div>
                        @Body
                    </div>
                }
            </CascadingAuthenticationState>
        </ChildContent>
        <ErrorContent>
            <p>An error occurred. Please check the Damselfly logs and reload the page.</p>
        </ErrorContent>
    </DetailedErrorBoundary>

    @code{ protected override void OnInitialized()
        {
            ViewDataService.SideBarStateChanged += SideBarChanged;
            base.OnInitialized();
        }

        private void SideBarChanged(ViewDataService.SideBarState state)
        {
            StateHasChanged();
        }

        public void Dispose()
        {
            ViewDataService.SideBarStateChanged -= SideBarChanged;
        }
    }