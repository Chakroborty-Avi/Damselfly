
@using MudBlazor.Utilities;

@inject ThemeService themeService
@inject UserThemeService userthemeService
@inject ConfigService configService
@inject IJSRuntime JsRuntime
@implements IDisposable

<MudThemeProvider Theme="@themeConfig.MudTheme" />

@code {
    private long cacheBuster = 1;
    private ThemeConfig themeConfig;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        themeConfig = userthemeService.CurrentTheme;

        if (themeConfig == null)
            themeConfig = themeService.DarkTheme;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            userthemeService.OnChangeTheme += SwitchTheme;
            SwitchTheme(userthemeService.CurrentTheme);
        }
    }

    public void Dispose()
    {
        userthemeService.OnChangeTheme -= SwitchTheme;
    }

    private void SwitchTheme(ThemeConfig newTheme)
    {

        if (newTheme != null)
        {
            // Apply the new stylesheet to Damselfly
            var themeCSS = $"{newTheme.Path}?j={cacheBuster++}";
            _ = JsRuntime.InvokeAsync<string>("setStyleSheet", newTheme.Path);

            if (newTheme.MudTheme != null)
            {
                themeConfig = newTheme;
            }

            if (themeConfig == null)
            {
                Logging.Log("No palatte - defaulting");
                themeConfig = themeService.DarkTheme;
            }

            // Trigger a statechanged for Mud
            StateHasChanged();
        }
    }
}
